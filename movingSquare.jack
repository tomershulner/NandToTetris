class MovingSquare {

    field int location;

    //Constructor: Initializes the square at a specific position.
    constructor MovingSquare new(int pos) {
        let location = pos;
        return this;
    }

    //Draws the square at its current position.
    method void draw() {
        var int memAddress;
        let memAddress = 16384 + location; // Calculate memory address
        do Memory.poke(memAddress, -1);
        do Memory.poke(memAddress + 32, -1);
        do Memory.poke(memAddress + 64, -16381);
        do Memory.poke(memAddress + 96, -16381);
        do Memory.poke(memAddress + 128, -16381);
        do Memory.poke(memAddress + 160, -16381);
        do Memory.poke(memAddress + 192, -16381);
        do Memory.poke(memAddress + 224, -16381);
        do Memory.poke(memAddress + 256, -16381);
        do Memory.poke(memAddress + 288, -16381);
        do Memory.poke(memAddress + 320, -16381);
        do Memory.poke(memAddress + 352, -16381);
        do Memory.poke(memAddress + 384, -16381);
        do Memory.poke(memAddress + 416, -16381);
        do Memory.poke(memAddress + 448, -1);
        do Memory.poke(memAddress + 480, -1);
        return;
    }

    //Clears the square from the screen.
    method void clear() {
        var int memAddress;
        let memAddress = 16384 + location; // Calculate memory address
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }

    //Moves the square one step to the left.
    method void moveLeft() {
        do clear();
        let location = location - 1;
        do draw();
        return;
    }

    method boolean isAtEnd() {
        return (location = 0); // True if the square is at the leftmost position
    }

    method void destroy() {
        do clear();
        return;
    }
    
}
