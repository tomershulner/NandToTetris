class DBGraphics {

    // Graphics for ball 1
    function void drawDB1(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -16381);
        do Memory.poke(memAddress +160, -32767);
        do Memory.poke(memAddress +192, -32767);
        do Memory.poke(memAddress +224, -32383);
        do Memory.poke(memAddress +256, -32383);
        do Memory.poke(memAddress +288, -32767);
        do Memory.poke(memAddress +320, -32767);
        do Memory.poke(memAddress +352, -16381);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB1(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }


    // Graphics for ball 2
    function void drawDB2(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -16381);
        do Memory.poke(memAddress +160, -32767);
        do Memory.poke(memAddress +192, -32767);
        do Memory.poke(memAddress +224, -31135);
        do Memory.poke(memAddress +256, -31135);
        do Memory.poke(memAddress +288, -32767);
        do Memory.poke(memAddress +320, -32767);
        do Memory.poke(memAddress +352, -16381);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB2(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }


    // Graphics for ball 3
    function void drawDB3(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -16381);
        do Memory.poke(memAddress +160, -32767);
        do Memory.poke(memAddress +192, -32767);
        do Memory.poke(memAddress +224, -26215);
        do Memory.poke(memAddress +256, -26215);
        do Memory.poke(memAddress +288, -32767);
        do Memory.poke(memAddress +320, -32767);
        do Memory.poke(memAddress +352, -16381);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB3(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }


    // // Graphics for ball 4
    function void drawDB4(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -16381);
        do Memory.poke(memAddress +160, -29647);
        do Memory.poke(memAddress +192, -29647);
        do Memory.poke(memAddress +224, -32767);
        do Memory.poke(memAddress +256, -32767);
        do Memory.poke(memAddress +288, -29647);
        do Memory.poke(memAddress +320, -29647);
        do Memory.poke(memAddress +352, -16381);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB4(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }


    // Graphics for ball 5
    function void drawDB5(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -13261);
        do Memory.poke(memAddress +160, -29647);
        do Memory.poke(memAddress +192, -32767);
        do Memory.poke(memAddress +224, -32383);
        do Memory.poke(memAddress +256, -32383);
        do Memory.poke(memAddress +288, -32767);
        do Memory.poke(memAddress +320, -29647);
        do Memory.poke(memAddress +352, -13261);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB5(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }


    // Graphics for ball 6
    function void drawDB6(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -16381);
        do Memory.poke(memAddress +160, -26215);
        do Memory.poke(memAddress +192, -26215);
        do Memory.poke(memAddress +224, -32767);
        do Memory.poke(memAddress +256, -32767);
        do Memory.poke(memAddress +288, -26215);
        do Memory.poke(memAddress +320, -26215);
        do Memory.poke(memAddress +352, -16381);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB6(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }


    // Graphics for ball 7
    function void drawDB7(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress, 2016);
        do Memory.poke(memAddress +32, 6168);
        do Memory.poke(memAddress +64, 12300);
        do Memory.poke(memAddress +96, 24582);
        do Memory.poke(memAddress +128, -14749);
        do Memory.poke(memAddress +160, -31135);
        do Memory.poke(memAddress +192, -32767);
        do Memory.poke(memAddress +224, -26215);
        do Memory.poke(memAddress +256, -26215);
        do Memory.poke(memAddress +288, -32767);
        do Memory.poke(memAddress +320, -31135);
        do Memory.poke(memAddress +352, -14749);
        do Memory.poke(memAddress +384, 16386);
        do Memory.poke(memAddress +416, 12300);
        do Memory.poke(memAddress +448, 6168);
        do Memory.poke(memAddress +480, 2016);
        return;
    }

    function void clearDB7(int location) {
        var int memAddress; 
        let memAddress = 16384 + location;
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }

}