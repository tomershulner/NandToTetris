// Class that handles all of the game graphics

class Graphics {

    function void drawGokuStanding(int location) {
		do drawGokuHead(location);
		do drawGokuStandingBody(location + (32 * 24));
        return;
    }

	function void drawGokuFlying(int location) {
		do drawGokuHead(location);
		do drawGokuFlyingBody(location + (32 * 24));
		return;
	}

	function void eraseGokuFlying(int location) {
		do eraseGokuHead(location);
		do eraseGokuFlyingBody(location + (32 * 24));
		return;
	}

	    function void eraseGokuStanding(int location) {
        do eraseGokuHead(location);
		do eraseGokuStandingBody(location + (32*24));
        return;
    }
    

	method void drawGokuStandingBody(int location) {
		var int memAddress; 
		let memAddress = 16384 + location;
		// column 0
		do Memory.poke(memAddress, 1024);
		do Memory.poke(memAddress +32, 18944);
		do Memory.poke(memAddress +64, 18688);
		do Memory.poke(memAddress +96, -30464);
		do Memory.poke(memAddress +128, 4864);
		do Memory.poke(memAddress +160, 11392);
		do Memory.poke(memAddress +192, -6016);
		do Memory.poke(memAddress +224, 9344);
		do Memory.poke(memAddress +256, -2176);
		do Memory.poke(memAddress +288, 2112);
		do Memory.poke(memAddress +320, 2112);
		do Memory.poke(memAddress +352, 2624);
		do Memory.poke(memAddress +384, 3648);
		do Memory.poke(memAddress +416, 1408);
		do Memory.poke(memAddress +448, 1536);
		do Memory.poke(memAddress +480, 512);
		do Memory.poke(memAddress +512, 512);
		do Memory.poke(memAddress +544, 512);
		do Memory.poke(memAddress +576, -512);
		do Memory.poke(memAddress +608, 16896);
		do Memory.poke(memAddress +640, 32000);
		do Memory.poke(memAddress +672, 8960);
		do Memory.poke(memAddress +704, 8448);
		do Memory.poke(memAddress +736, 16128);
		// column 1
		do Memory.poke(memAddress +1, 64);
		do Memory.poke(memAddress +33, 160);
		do Memory.poke(memAddress +65, 160);
		do Memory.poke(memAddress +97, 160);
		do Memory.poke(memAddress +129, 159);
		do Memory.poke(memAddress +161, 192);
		do Memory.poke(memAddress +193, 255);
		do Memory.poke(memAddress +225, 320);
		do Memory.poke(memAddress +257, 383);
		do Memory.poke(memAddress +289, 968);
		do Memory.poke(memAddress +321, 584);
		do Memory.poke(memAddress +353, 648);
		do Memory.poke(memAddress +385, 648);
		do Memory.poke(memAddress +417, 392);
		do Memory.poke(memAddress +449, 264);
		do Memory.poke(memAddress +481, 268);
		do Memory.poke(memAddress +513, 266);
		do Memory.poke(memAddress +545, 249);
		do Memory.poke(memAddress +577, 136);
		do Memory.poke(memAddress +609, 136);
		do Memory.poke(memAddress +641, 376);
		do Memory.poke(memAddress +673, 776);
		do Memory.poke(memAddress +705, 1008);
		return;
	}

	method void eraseGokuStandingBody(int location) {
		var int memAddress; 
		let memAddress = 16384 + location;
		// column 0
		do Memory.poke(memAddress, 0);
		do Memory.poke(memAddress +32, 0);
		do Memory.poke(memAddress +64, 0);
		do Memory.poke(memAddress +96, 0);
		do Memory.poke(memAddress +128, 0);
		do Memory.poke(memAddress +160, 0);
		do Memory.poke(memAddress +192, 0);
		do Memory.poke(memAddress +224, 0);
		do Memory.poke(memAddress +256, 0);
		do Memory.poke(memAddress +288, 0);
		do Memory.poke(memAddress +320, 0);
		do Memory.poke(memAddress +352, 0);
		do Memory.poke(memAddress +384, 0);
		do Memory.poke(memAddress +416, 0);
		do Memory.poke(memAddress +448, 0);
		do Memory.poke(memAddress +480, 0);
		do Memory.poke(memAddress +512, 0);
		do Memory.poke(memAddress +544, 0);
		do Memory.poke(memAddress +576, 0);
		do Memory.poke(memAddress +608, 0);
		do Memory.poke(memAddress +640, 0);
		do Memory.poke(memAddress +672, 0);
		do Memory.poke(memAddress +704, 0);
		do Memory.poke(memAddress +736, 0);
		// column 1
		do Memory.poke(memAddress +1, 0);
		do Memory.poke(memAddress +33, 0);
		do Memory.poke(memAddress +65, 0);
		do Memory.poke(memAddress +97, 0);
		do Memory.poke(memAddress +129, 0);
		do Memory.poke(memAddress +161, 0);
		do Memory.poke(memAddress +193, 0);
		do Memory.poke(memAddress +225, 0);
		do Memory.poke(memAddress +257, 0);
		do Memory.poke(memAddress +289, 0);
		do Memory.poke(memAddress +321, 0);
		do Memory.poke(memAddress +353, 0);
		do Memory.poke(memAddress +385, 0);
		do Memory.poke(memAddress +417, 0);
		do Memory.poke(memAddress +449, 0);
		do Memory.poke(memAddress +481, 0);
		do Memory.poke(memAddress +513, 0);
		do Memory.poke(memAddress +545, 0);
		do Memory.poke(memAddress +577, 0);
		do Memory.poke(memAddress +609, 0);
		do Memory.poke(memAddress +641, 0);
		do Memory.poke(memAddress +673, 0);
		do Memory.poke(memAddress +705, 0);
		return;
	}

	method void drawGokuFlyingBody(int location) {
		var int memAddress; 
		let memAddress = 16384 + location;
		// column 0
		do Memory.poke(memAddress, 1024);
		do Memory.poke(memAddress +32, 19392);
		do Memory.poke(memAddress +64, 18720);
		do Memory.poke(memAddress +96, -30448);
		do Memory.poke(memAddress +128, 4880);
		do Memory.poke(memAddress +160, 11408);
		do Memory.poke(memAddress +192, -6000);
		do Memory.poke(memAddress +224, 9360);
		do Memory.poke(memAddress +256, -2160);
		do Memory.poke(memAddress +288, 1136);
		do Memory.poke(memAddress +320, -1280);
		do Memory.poke(memAddress +352, 384);
		do Memory.poke(memAddress +384, 384);
		do Memory.poke(memAddress +416, 320);
		do Memory.poke(memAddress +448, 320);
		do Memory.poke(memAddress +480, 320);
		do Memory.poke(memAddress +512, 320);
		do Memory.poke(memAddress +544, 320);
		do Memory.poke(memAddress +576, 320);
		do Memory.poke(memAddress +608, -192);
		do Memory.poke(memAddress +640, 1088);
		do Memory.poke(memAddress +672, 1024);
		do Memory.poke(memAddress +704, 512);
		do Memory.poke(memAddress +736, 512);
		do Memory.poke(memAddress +768, 512);
		do Memory.poke(memAddress +800, 1024);
		do Memory.poke(memAddress +832, 2048);
		do Memory.poke(memAddress +864, -2048);
		do Memory.poke(memAddress +896, -30720);
		do Memory.poke(memAddress +928, -30720);
		do Memory.poke(memAddress +960, -29696);
		do Memory.poke(memAddress +992, -1024);
		// column 1
		do Memory.poke(memAddress +1, 64);
		do Memory.poke(memAddress +33, 7840);
		do Memory.poke(memAddress +65, 4512);
		do Memory.poke(memAddress +97, 3232);
		do Memory.poke(memAddress +129, 671);
		do Memory.poke(memAddress +161, 4800);
		do Memory.poke(memAddress +193, 7679);
		do Memory.poke(memAddress +225, 64);
		do Memory.poke(memAddress +257, 127);
		do Memory.poke(memAddress +289, 32);
		do Memory.poke(memAddress +321, 223);
		do Memory.poke(memAddress +353, 772);
		do Memory.poke(memAddress +385, 3084);
		do Memory.poke(memAddress +417, 4116);
		do Memory.poke(memAddress +449, 8212);
		do Memory.poke(memAddress +481, 12308);
		do Memory.poke(memAddress +513, 16380);
		do Memory.poke(memAddress +545, 11780);
		do Memory.poke(memAddress +577, 6148);
		do Memory.poke(memAddress +609, 2023);
		do Memory.poke(memAddress +641, 24);
		do Memory.poke(memAddress +673, 8);
		do Memory.poke(memAddress +705, 8);
		do Memory.poke(memAddress +737, 8);
		do Memory.poke(memAddress +769, 8);
		do Memory.poke(memAddress +801, 4);
		do Memory.poke(memAddress +833, 2);
		do Memory.poke(memAddress +865, 1);
		do Memory.poke(memAddress +897, 0);
		do Memory.poke(memAddress +929, 0);
		do Memory.poke(memAddress +961, 3);
		do Memory.poke(memAddress +993, 3);
		return;
	}

	method void eraseGokuFlyingBody(int location) {
		var int memAddress; 
		let memAddress = 16384 + location;
		// column 0
		do Memory.poke(memAddress, 0);
		do Memory.poke(memAddress +32, 0);
		do Memory.poke(memAddress +64, 0);
		do Memory.poke(memAddress +96, 0);
		do Memory.poke(memAddress +128, 0);
		do Memory.poke(memAddress +160, 0);
		do Memory.poke(memAddress +192, 0);
		do Memory.poke(memAddress +224, 0);
		do Memory.poke(memAddress +256, 0);
		do Memory.poke(memAddress +288, 0);
		do Memory.poke(memAddress +320, 0);
		do Memory.poke(memAddress +352, 0);
		do Memory.poke(memAddress +384, 0);
		do Memory.poke(memAddress +416, 0);
		do Memory.poke(memAddress +448, 0);
		do Memory.poke(memAddress +480, 0);
		do Memory.poke(memAddress +512, 0);
		do Memory.poke(memAddress +544, 0);
		do Memory.poke(memAddress +576, 0);
		do Memory.poke(memAddress +608, 0);
		do Memory.poke(memAddress +640, 0);
		do Memory.poke(memAddress +672, 0);
		do Memory.poke(memAddress +704, 0);
		do Memory.poke(memAddress +736, 0);
		do Memory.poke(memAddress +768, 0);
		do Memory.poke(memAddress +800, 0);
		do Memory.poke(memAddress +832, 0);
		do Memory.poke(memAddress +864, 0);
		do Memory.poke(memAddress +896, 0);
		do Memory.poke(memAddress +928, 0);
		do Memory.poke(memAddress +960, 0);
		do Memory.poke(memAddress +992, 0);
		// column 1
		do Memory.poke(memAddress +1, 0);
		do Memory.poke(memAddress +33, 0);
		do Memory.poke(memAddress +65, 0);
		do Memory.poke(memAddress +97, 0);
		do Memory.poke(memAddress +129, 0);
		do Memory.poke(memAddress +161, 0);
		do Memory.poke(memAddress +193, 0);
		do Memory.poke(memAddress +225, 0);
		do Memory.poke(memAddress +257, 0);
		do Memory.poke(memAddress +289, 0);
		do Memory.poke(memAddress +321, 0);
		do Memory.poke(memAddress +353, 0);
		do Memory.poke(memAddress +385, 0);
		do Memory.poke(memAddress +417, 0);
		do Memory.poke(memAddress +449, 0);
		do Memory.poke(memAddress +481, 0);
		do Memory.poke(memAddress +513, 0);
		do Memory.poke(memAddress +545, 0);
		do Memory.poke(memAddress +577, 0);
		do Memory.poke(memAddress +609, 0);
		do Memory.poke(memAddress +641, 0);
		do Memory.poke(memAddress +673, 0);
		do Memory.poke(memAddress +705, 0);
		do Memory.poke(memAddress +737, 0);
		do Memory.poke(memAddress +769, 0);
		do Memory.poke(memAddress +801, 0);
		do Memory.poke(memAddress +833, 0);
		do Memory.poke(memAddress +865, 0);
		do Memory.poke(memAddress +897, 0);
		do Memory.poke(memAddress +929, 0);
		do Memory.poke(memAddress +961, 0);
		do Memory.poke(memAddress +993, 0);
		return;
	}

	method void drawGokuHead(int location) {
		var int memAddress; 
		let memAddress = 16384 + location;
		// column 0
		do Memory.poke(memAddress +64, ~32767);
		do Memory.poke(memAddress +96, -16384);
		do Memory.poke(memAddress +128, -16384);
		do Memory.poke(memAddress +160, -8192);
		do Memory.poke(memAddress +192, -8192);
		do Memory.poke(memAddress +224, -8192);
		do Memory.poke(memAddress +256, -8192);
		do Memory.poke(memAddress +288, -2048);
		do Memory.poke(memAddress +320, -1024);
		do Memory.poke(memAddress +352, -512);
		do Memory.poke(memAddress +384, -512);
		do Memory.poke(memAddress +416, -32);
		do Memory.poke(memAddress +448, -128);
		do Memory.poke(memAddress +480, -16400);
		do Memory.poke(memAddress +512, -1);
		do Memory.poke(memAddress +544, 14332);
		do Memory.poke(memAddress +576, -22544);
		do Memory.poke(memAddress +608, -30728);
		do Memory.poke(memAddress +640, 7680);
		do Memory.poke(memAddress +672, 12032);
		do Memory.poke(memAddress +704, -16384);
		// column 1
		do Memory.poke(memAddress +1, 252);
		do Memory.poke(memAddress +33, 63);
		do Memory.poke(memAddress +65, 31);
		do Memory.poke(memAddress +97, 31);
		do Memory.poke(memAddress +129, 975);
		do Memory.poke(memAddress +161, 4079);
		do Memory.poke(memAddress +193, 8191);
		do Memory.poke(memAddress +225, 16383);
		do Memory.poke(memAddress +257, 32767);
		do Memory.poke(memAddress +289, -1);
		do Memory.poke(memAddress +321, 4095);
		do Memory.poke(memAddress +353, 1023);
		do Memory.poke(memAddress +385, 511);
		do Memory.poke(memAddress +417, 2047);
		do Memory.poke(memAddress +449, 8187);
		do Memory.poke(memAddress +481, 16355);
		do Memory.poke(memAddress +513, 1987);
		do Memory.poke(memAddress +545, 387);
		do Memory.poke(memAddress +577, 325);
		do Memory.poke(memAddress +609, 111);
		do Memory.poke(memAddress +641, 64);
		do Memory.poke(memAddress +673, 32);
		do Memory.poke(memAddress +705, 16);
		do Memory.poke(memAddress +737, 15);
		return;
	}

	method void eraseGokuHead(int location) {
		var int memAddress; 
		let memAddress = 16384 + location;
		// column 0
		do Memory.poke(memAddress +64, 0);
		do Memory.poke(memAddress +96, 0);
		do Memory.poke(memAddress +128, 0);
		do Memory.poke(memAddress +160, 0);
		do Memory.poke(memAddress +192, 0);
		do Memory.poke(memAddress +224, 0);
		do Memory.poke(memAddress +256, 0);
		do Memory.poke(memAddress +288, 0);
		do Memory.poke(memAddress +320, 0);
		do Memory.poke(memAddress +352, 0);
		do Memory.poke(memAddress +384, 0);
		do Memory.poke(memAddress +416, 0);
		do Memory.poke(memAddress +448, 0);
		do Memory.poke(memAddress +480, 0);
		do Memory.poke(memAddress +512, 0);
		do Memory.poke(memAddress +544, 0);
		do Memory.poke(memAddress +576, 0);
		do Memory.poke(memAddress +608, 0);
		do Memory.poke(memAddress +640, 0);
		do Memory.poke(memAddress +672, 0);
		do Memory.poke(memAddress +704, 0);
		// column 1
		do Memory.poke(memAddress +1, 0);
		do Memory.poke(memAddress +33, 0);
		do Memory.poke(memAddress +65, 0);
		do Memory.poke(memAddress +97, 0);
		do Memory.poke(memAddress +129, 0);
		do Memory.poke(memAddress +161, 0);
		do Memory.poke(memAddress +193, 0);
		do Memory.poke(memAddress +225, 0);
		do Memory.poke(memAddress +257, 0);
		do Memory.poke(memAddress +289, 0);
		do Memory.poke(memAddress +321, 0);
		do Memory.poke(memAddress +353, 0);
		do Memory.poke(memAddress +385, 0);
		do Memory.poke(memAddress +417, 0);
		do Memory.poke(memAddress +449, 0);
		do Memory.poke(memAddress +481, 0);
		do Memory.poke(memAddress +513, 0);
		do Memory.poke(memAddress +545, 0);
		do Memory.poke(memAddress +577, 0);
		do Memory.poke(memAddress +609, 0);
		do Memory.poke(memAddress +641, 0);
		do Memory.poke(memAddress +673, 0);
		do Memory.poke(memAddress +705, 0);
		do Memory.poke(memAddress +737, 0);
		return;
	}
}